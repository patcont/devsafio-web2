{"version":3,"file":"static/js/627.cd435603.chunk.js","mappings":"iPAAaA,EAAc,CACzB,CACEC,KAAM,OACNC,GAAI,OACJC,YAAa,YACbC,KAAM,OACNC,MAAO,SACPC,aAAc,cAEhB,CACEL,KAAM,OACNC,GAAI,WACJC,YAAa,cACbC,KAAM,WACNC,MAAO,WACPC,aAAc,eAEhB,CACEL,KAAM,QACNC,GAAI,QACJC,YAAa,kBACbC,KAAM,QACNC,MAAO,QACPC,aAAc,SAEhB,CACEL,KAAM,WACNC,GAAI,WACJC,YAAa,gBACbC,KAAM,WACNC,MAAO,gBACPC,aAAc,YAEhB,CACEL,KAAM,WACNC,GAAI,aACJC,YAAa,4BACbC,KAAM,aACNC,MAAO,WACPC,aAAc,Q,2DC2DlB,EArFqB,WACnB,OAAsCC,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,GAA3BF,YACFG,GAAWC,EAAAA,EAAAA,MAyBXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbb,KAAM,GACNc,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,WAAY,IAEdC,SA/Be,SAACC,GAChBd,GAAe,IACfe,EAAAA,EAAAA,IAAgB,CACdC,KAAM,CACJN,MAAOI,EAAOJ,MACdf,KAAMmB,EAAOnB,KACbsB,SAAUH,EAAOL,SACjBE,SAAUG,EAAOH,SACjBO,sBAAuBJ,EAAOF,cAE/BO,MAAK,SAACC,GACPpB,GAAe,IACfqB,EAAAA,EAAAA,GAAmBD,GAAK,kBAAMnB,EAAYmB,EAAIE,MAAOF,EAAIG,KAAKP,SAC3DG,MAAK,WACJnB,GAAe,GACfI,EAAS,eAAgB,CAAEoB,SAAS,EAAMC,MAAOL,OAElDM,OAAM,SAACC,GACN3B,GAAe,GACf4B,QAAQC,IAAIF,UAalBG,UAAUA,EAAAA,EAAAA,IAASC,EAAAA,MAGfC,GAAkBC,EAAAA,EAAAA,IAA0B3B,GAElD,OACE,+BACE,gBAAK4B,UAAU,0DAAf,UACE,oBAASA,UAAU,4DAAnB,SACInC,GA6BA,gBAAKmC,UAAU,oEAAf,UACE,SAACC,EAAA,EAAD,OA7BF,gBAAKD,UAAU,gCAAf,UACE,UAACE,EAAA,EAAD,YACE,eAAIF,UAAU,gBAAd,yBACA,iBAAMA,UAAU,MAAMrB,SAAUP,EAAO+B,aAAvC,UACE,gBAAKH,UAAU,MAAf,UACE,gCACG3C,EAAY+C,KAAI,SAACC,EAAMC,GAAP,OACf,SAACC,EAAA,EAAD,CAEE7C,MAAO2C,EAAK3C,MACZJ,KAAM+C,EAAK/C,KACXkD,SAAUV,EACVvC,GAAI8C,EAAK9C,GACTC,YAAa6C,EAAK7C,YAClBC,KAAM4C,EAAK5C,KACXW,OAAQA,GARV,gBACgBkC,GADhB,OACwBD,EAAK5C,WAU/B,SAACgD,EAAA,EAAD,CACEC,MAAO,UACPpD,KAAM","sources":["views/register/data/inputConfig.js","views/register/RegisterPage.js"],"sourcesContent":["export const inputConfig = [\r\n  {\r\n    type: 'text',\r\n    id: 'name',\r\n    placeholder: 'tu nombre',\r\n    name: 'name',\r\n    label: 'nombre',\r\n    autoComplete: 'given-name',\r\n  },\r\n  {\r\n    type: 'text',\r\n    id: 'lastName',\r\n    placeholder: 'tu apellido',\r\n    name: 'lastName',\r\n    label: 'Apellido',\r\n    autoComplete: 'family-name',\r\n  },\r\n  {\r\n    type: 'email',\r\n    id: 'email',\r\n    placeholder: 'email@gmail.com',\r\n    name: 'email',\r\n    label: 'email',\r\n    autoComplete: 'email',\r\n  },\r\n  {\r\n    type: 'password',\r\n    id: 'password',\r\n    placeholder: 'contraseña',\r\n    name: 'password',\r\n    label: 'contraseña',\r\n    autoComplete: 'password',\r\n  },\r\n  {\r\n    type: 'password',\r\n    id: 'c_password',\r\n    placeholder: 'confirma la contraseña',\r\n    name: 'c_password',\r\n    label: 'confirma',\r\n    autoComplete: 'off',\r\n  },\r\n]","import React, { useState, useContext } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { ButtonComponent } from \"../../components/common/ButtonComponent\";\r\nimport { InputComponent } from \"../../components/common/InputComponent\";\r\nimport { registerSchema as schema } from \"../../components/schemas/schema\";\r\nimport { FormsCardContainer } from \"../../layout/FormsCardContainer\";\r\nimport { handlerInputChangeCreator, validate } from \"../../utils/utils\";\r\nimport { inputConfig } from \"./data/inputConfig\";\r\nimport { register as registerService } from \"../../services/users\";\r\nimport { SpinnerLoader } from \"../../components/loaders/SpinnerLoader\";\r\nimport { responseOnValidate } from \"../../utils/alerts\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { authContext } from \"../../context/authContext\";\r\nconst RegisterPage = () => {\r\n  const [formLoading, setFormLoading] = useState(false);\r\n  const { handleLogin } = useContext(authContext);\r\n  const navigate = useNavigate();\r\n\r\n  const onSubmit = (values) => {\r\n    setFormLoading(true);\r\n    registerService({\r\n      user: {\r\n        email: values.email,\r\n        name: values.name,\r\n        lastname: values.lastName,\r\n        password: values.password,\r\n        password_confirmation: values.c_password,\r\n      },\r\n    }).then((res) => {\r\n      setFormLoading(false);\r\n      responseOnValidate(res, () => handleLogin(res.token, res.data.user))\r\n        .then(() => {\r\n          setFormLoading(false);\r\n          navigate(\"../postulate\", { replace: true, state: res });\r\n        })\r\n        .catch((err) => {\r\n          setFormLoading(false);\r\n          console.log(err);\r\n        });\r\n    });\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      c_password: \"\",\r\n    },\r\n    onSubmit: onSubmit,\r\n    validate: validate(schema),\r\n  });\r\n\r\n  const handleTxtChange = handlerInputChangeCreator(formik);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-primary containerWithHeader-min-height flex flex-col\">\r\n        <section className=\" flex grow items-center animate__animated animate__fadeIn\">\r\n          {!formLoading ? (\r\n            <div className=\"container mb-16  mx-auto mt-4\">\r\n              <FormsCardContainer>\r\n                <h3 className=\"text-3xl px-4\">Registrate</h3>\r\n                <form className=\"p-1\" onSubmit={formik.handleSubmit}>\r\n                  <div className=\"p-4\">\r\n                    <>\r\n                      {inputConfig.map((item, index) => (\r\n                        <InputComponent\r\n                          key={`input-${index}${item.name}`}\r\n                          label={item.label}\r\n                          type={item.type}\r\n                          onChange={handleTxtChange}\r\n                          id={item.id}\r\n                          placeholder={item.placeholder}\r\n                          name={item.name}\r\n                          formik={formik}\r\n                        />\r\n                      ))}\r\n                      <ButtonComponent\r\n                        style={\"primary\"}\r\n                        type={\"submit\"}\r\n                      ></ButtonComponent>\r\n                    </>\r\n                  </div>\r\n                </form>\r\n              </FormsCardContainer>\r\n            </div>\r\n          ) : (\r\n            <div className=\"mx-auto container mb-16 flex justify-center w-full  items-center \">\r\n              <SpinnerLoader />\r\n            </div>\r\n          )}\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["inputConfig","type","id","placeholder","name","label","autoComplete","useState","formLoading","setFormLoading","handleLogin","useContext","authContext","navigate","useNavigate","formik","useFormik","initialValues","lastName","email","password","c_password","onSubmit","values","registerService","user","lastname","password_confirmation","then","res","responseOnValidate","token","data","replace","state","catch","err","console","log","validate","schema","handleTxtChange","handlerInputChangeCreator","className","SpinnerLoader","FormsCardContainer","handleSubmit","map","item","index","InputComponent","onChange","ButtonComponent","style"],"sourceRoot":""}