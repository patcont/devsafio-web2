{"version":3,"file":"static/js/108.92485f24.chunk.js","mappings":"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","sources":["components/common/ButtonComponent.js","components/common/SelectComponent.js","components/common/InputComponent.js","components/schemas/schema.js","layout/FormsCardContainer.js","utils/utils.js","views/jobProfile/JobProfile.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst primaryClass =\r\n  \"btn w-full  border-none color: bg-primary text-white hover:bg-accent hover:border-none hover:drop-shadow-xl\";\r\nconst primarySmallClass = \"btn w-2/5 border-none color: bg-primary text-white hover:bg-accent hover:border-none hover:drop-shadow-xl \"\r\nconst secondaryClass =\r\n  \"btn w-full md:w-1/2 lg:w-2/5 color: bg-white text-primary border-primary hover:bg-secondary hover:text-white hover:border-none hover:drop-shadow-xl\";\r\nconst defaultBtnClass = \"btn w-full md:w-1/2 lg:w-2/5 \";\r\nconst ButtonComponent = ({ type, style, label = 'enviar', onClick, }) => {\r\n  return (\r\n    <div className={style !== null ? `flex justify-end py-2 {style === 'primary' ? md:justify-center}` : 'flex items-center'}>\r\n      <button\r\n        type={type}\r\n        className={\r\n          style === \"primary\"\r\n            ? primaryClass\r\n            : style === \"secondary\"\r\n            ? secondaryClass\r\n            : style === null\r\n            ? undefined\r\n            : style === \"primary-small\"\r\n            ? primarySmallClass\r\n            : defaultBtnClass\r\n        }\r\n        onClick={type === 'button' ? onClick : null}\r\n      >\r\n        <span className=\"tracking-widest text-lg\">{label}</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { ButtonComponent };\r\n","import React from \"react\";\r\n\r\n/* USO: el componente recibe un objeto de configuracion en este se especifica el label, name, id y las\r\nopciones que son un array de objetos que este itera: EJEMPLO\r\nconst selectOptions = {\r\n  label: 'Seleccion una de estas opciones',\r\n  name: 'select',\r\n  id: 'select',\r\n  options:\r\n  [\r\n    {\r\n    value: 1,\r\n    text: 'valor numero uno '\r\n    },\r\n    {\r\n      value: 2,\r\n      text: 'valor numero dos '\r\n    },\r\n    {\r\n      value: 3,\r\n      text: 'valor numero tres '\r\n    },\r\n    {\r\n      value: 4,\r\n      text: 'valor numero cuatro '\r\n    },\r\n  ]\r\n} \r\ncon la funcion onChange obtendremos el valor de la opcion seleccionada y esta se mostrara en el estado de\r\nformik y la validara con el schema de Yup.\r\n*/\r\n\r\nconst SelectComponent = ({ options,  dataset, onChange, formik, label, name, id }) => {\r\n  return (\r\n    <>\r\n      <div className=\"mb-2 text-lg\">\r\n        <label >{label}</label>\r\n      </div>\r\n      <select\r\n        className=\" appearance-none mb-2 block w-full text-base font-normal text-gray-700 bg-white bg-clip-padding bg-no-repeat  border border-solid border-primary rounded  transition ease-in-out  m-0  focus:text-gray-700 focus:bg-white focus:border-accent focus:outline-none px-4 py-2\"\r\n        name={name}\r\n        id={id}\r\n        onChange={onChange}\r\n        dataset={dataset}\r\n      >\r\n\r\n        <option value={\"\"}>Selecciona...</option>\r\n        {\r\n          options.map((option) => (\r\n            <option\r\n              key={`option-${option.value}`}\r\n              value={option.value}\r\n            >\r\n              {option.text}\r\n            </option>\r\n          ))\r\n        }\r\n      </select>\r\n    {/*   {\r\n        formik.touched[name] && !!formik.errors[name] &&\r\n        (\r\n          <div className=\"mb-2\">\r\n            <span className=\"text-error\">{formik.errors[name]}</span>\r\n          </div>\r\n        )\r\n      } */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { SelectComponent };","import React, { useRef } from \"react\";\r\nimport { BsCameraFill, BsCheck2Circle } from 'react-icons/bs'\r\nimport { ButtonComponent } from \"./ButtonComponent\";\r\nimport { SelectComponent } from \"./SelectComponent\";\r\n/* \r\nUSO: el componente recibe props \r\n1)type = tipo de input\r\n2)id =  id del input\r\n3)placeHolder = placeholder del input si es necesario\r\n4)name: nombre del input\r\n5)label: label del input\r\n6)formik: instacia de formik -> importante para captular el value y los errors en la validacion\r\n7)onChange: funcion onChange que controla los valores del componente \r\n8)titleHead: si es necesario un titulo de encabezado antes del label\r\n->>En este ejemplo podemos ver como configurar el componente para que este itere en los diferentes tipos de inputs\r\nconst inputConfig = [\r\n  {\r\n    type: 'text/email/password/etc..',\r\n    id: 'id',\r\n    placeholder: 'placeholder',\r\n    name: 'name del input',\r\n    label: 'label del input',\r\n    autoComplete: 'off/on',\r\n  },\r\n  {\r\n    type: 'checkbox',\r\n    id: 'id',\r\n    name: 'checkbox name',\r\n    label: 'checkbox label',\r\n  },\r\n  {\r\n    type: 'radio',\r\n    id: 'radio',\r\n    name: 'todos los radio grup deben de tener el mismo name',\r\n    label: 'radio label',\r\n    value: 'debes enviar el valor del radio para que este sea capturado por formik || tienes que pasarle el radioValue por props ( item.value) '\r\n  },\r\n]\r\n*/\r\n\r\nconst InputComponent = ({ type, dataset, checkValue, radioValue, id, placeholder, name, label, formik, onChange, options, titleHead = { show: false, title: undefined } }) => {\r\n  const checkRadioLayout = [\"flex items-center mb-2 justify-start \"];\r\n  const checkInputClass = [\"order-1 m-0 checkbox checkbox-primary checkbox-sm border border-gray-300 bg-white checked:border-accent focus:outline-none transition duration-200  bg-no-repeat bg-center bg-contain  cursor-pointer mr-2\"];\r\n  const radioInputClass = [\"order- 1 m-0 radio radio-primary radio-sm mr-2 border border-gray-300 bg-white checked:border-accent focus:outline-none transition duration-300  bg-no-repeat bg-center bg-contain  cursor-pointer mr-2 \"];\r\n  const inputDefaultClass = [\"input input-bordered rounded w-full input-md text-base  focus:border-2 focus:border-primary focus:outline-none\"];\r\n  const inputRef = useRef(null);\r\n  const showUiFileInput = () => {\r\n    inputRef.current.click();\r\n  }\r\n  return (\r\n    <>\r\n      {titleHead.show ? <h1 className=\"pt-5 pb-2 text-2xl\">{titleHead.title}</h1> : null}\r\n      <div\r\n        className={\r\n          (type === \"checkbox\" || type === 'radio') ? checkRadioLayout : type === 'file' ? 'mb-0' : \"mb-2 \"\r\n        }\r\n      >\r\n        {\r\n          type === \"select\" ? <SelectComponent\r\n            label={label}\r\n            name={name}\r\n            id={id}\r\n            formik={formik}\r\n            onChange={onChange}\r\n            options={options}\r\n            dataset={dataset}\r\n          /> :\r\n            <>  <label\r\n              htmlFor={id}\r\n              className={\r\n                (type === \"checkbox\" || type === 'radio' || type === 'file')\r\n                  ? 'label capitalize  px-0 order-2'\r\n                  : \"label capitalize px-0\"}>\r\n              {\r\n                type !== 'file'\r\n                  ? <span className=\"label-text text-lg\">{label}</span>\r\n                  :\r\n                  <div className=\"flex items-center \">\r\n                    {\r\n                      typeof formik.values?.[name] === 'object'\r\n                        ? <span className=\"mr-10 text-base\">Archivo cargado</span>\r\n                        : <span className=\"mr-10 text-base\"> sube un archivo </span>\r\n                    }\r\n                    <ButtonComponent type={\"button\"} onClick={showUiFileInput} style={null}>\r\n                      {\r\n                        typeof formik.values?.[name] === 'object'\r\n                          ? <BsCheck2Circle size={32} color={\"#FFD24C\"} />\r\n                          : <BsCameraFill size={32} color={\"#646FD4\"} />\r\n                      }\r\n\r\n                    </ButtonComponent>\r\n                  </div>\r\n              }\r\n            </label>\r\n              <input\r\n                type={type}\r\n                ref={inputRef}\r\n                placeholder={placeholder}\r\n                className={\r\n                  type === \"checkbox\"\r\n                    ? checkInputClass\r\n                    : type === \"radio\"\r\n                      ? radioInputClass\r\n                      : type === 'file'\r\n                        ? 'hidden'\r\n                        : inputDefaultClass\r\n                }\r\n                dataset={dataset}\r\n                name={name}\r\n                id={id}\r\n                onChange={onChange}\r\n                value={type === \"radio\" ? radioValue : type === \"file\" ? undefined : type === 'checkbox' ? checkValue : formik.values[name]}\r\n              />\r\n            </>\r\n        }\r\n\r\n\r\n      </div>\r\n      {\r\n      formik.touched[name] && !!formik.errors[name] && (\r\n        <div className=\"mb-2\">\r\n          <span className=\"text-error\">{formik.errors[name]}</span>\r\n        </div>\r\n      )\r\n      }\r\n      {\r\n        dataset === 'multipleCheck' && (\r\n          <div className=\"mb-2\">\r\n            <span className=\"text-error\">{formik.errors.multipleCheck}</span>\r\n          </div>\r\n        )\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport { InputComponent };","import * as Yup from \"yup\";\r\n\r\nlet basicSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .max(30, 'No puedes superar 30 caracteres')\r\n    .required('Nombre es Requerido'),\r\n  lastName: Yup.string()\r\n    .max(30, 'No puedes superar 30 caracteres')\r\n    .required('Apellido es requerido'),\r\n  email: Yup.string()\r\n    .email('Email inválido')\r\n    .max(50, 'El texto no debe superar los 50 carácteres')\r\n    .required(\"Email es requerido\"),\r\n\r\n});\r\nlet register = basicSchema.shape({\r\n  password: Yup.string()\r\n    .matches(/^(?=.*[A-Za-z_0-9])(?=.*\\d)[A-Za-z\\d]{6,}$/g, 'La contraseña debe incluir 6 characteres y almenos un numero')\r\n    .required(\"Contraseña es requerida\"),\r\n  c_password: Yup.string()\r\n    .oneOf([Yup.ref('password'), null], 'contraseñas no coinciden')\r\n    .required('Confirma la contraseña'),\r\n});\r\n\r\nlet jopSchema = basicSchema.shape({\r\n  number: Yup.string()\r\n    .required('debes de ingresar tu numero telefonico'),\r\n  city: Yup.string()\r\n    .required('ingresa tu ciudad'),\r\n  country: Yup.string()\r\n    .required('ingresa tu pais'),\r\n  gender: Yup.string()\r\n    .required('ingresa tu genero'),\r\n  workavailability: Yup.string()\r\n    .required('ingresa tu disponibilidad'),\r\n  visa: Yup.string()\r\n    .required('ingresa tu tipo residencia actual'),\r\n  multipleCheck: Yup.array().min(1, 'debes seleccionar una casilla')\r\n})\r\n\r\nlet login = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email('Email inválido')\r\n    .max(50, 'El texto no debe superar los 50 carácteres')\r\n    .required(\"Email es requerido\"),\r\n  password: Yup.string()\r\n    .matches(/^(?=.*[A-Za-z_0-9])(?=.*\\d)[A-Za-z\\d]{6,}$/g, 'La contraseña debe incluir 6 characteres y almenos un numero')\r\n    .required(\"Contraseña es requeridad\"),\r\n});\r\n\r\nlet postulate = Yup.object().shape({\r\n  maxEducationLevel: Yup.string()\r\n    .required(\"Selecciona tu nivel de educacion\"),\r\n  actualEducationSituation: Yup.string()\r\n    .required(\"Selecciona tu situación educativa actual\"),\r\n  englishLevel: Yup.string()\r\n    .required(\"Selecciona tu nivel de ingles\"),\r\n  otherTec: Yup.string()\r\n});\r\n\r\nlet postulate2 = Yup.object().shape({\r\n  cvUrl: Yup.string()\r\n    .required(\"Se recomienda subir como documento público en Google Drive o similar\"),\r\n  urlLinkedin: Yup.string()\r\n    .required(\"Ingresa la url de tu perfil\"),\r\n  projectDescription: Yup.string()\r\n    .required(\"Comentanos algún proyecto que hayas realizado\"),\r\n  experienceUI: Yup.number()\r\n    .required(\"selecciona los años de experiencia\"),\r\n  experienceDev: Yup.number()\r\n    .required(\"selecciona los años de experiencia\"),\r\n  experienceData: Yup.number()\r\n    .required(\"selecciona los años de experiencia\"),\r\n})\r\n\r\n\r\nexport const registerSchema = () => {\r\n  return register;\r\n}\r\n\r\nexport const jopProfileShema = () => {\r\n  return jopSchema;\r\n}\r\nexport const loginSchema = () => {\r\n  return login;\r\n}\r\nexport const postulateSchema = () => {\r\n  return postulate;\r\n}\r\nexport const postulateSchema2 = () => {\r\n  return postulate2;\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst FormsCardContainer = ({children}) => {\r\n  return(\r\n    <div className=\"w-full md:w-4/5 mx-auto lg:w-3/5  rounded   bg-white py-5 md:py-10 px-4  \">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { FormsCardContainer };","export const getErrorsFromValidationError = (validationError) => {\r\n  const FIRST_ERROR = 0;\r\n  return validationError.inner.reduce((errors, error) => {\r\n      return {\r\n          ...errors,\r\n          [error.path]: error.errors[FIRST_ERROR] ,\r\n      };\r\n  }, {});\r\n};\r\n\r\nexport const validate = (getValidationSchema) => {\r\n  return (values) => {\r\n      const validationSchema = getValidationSchema(values);\r\n      try {\r\n          validationSchema.validateSync(values, { abortEarly: false });\r\n          return {};\r\n      } catch (error) {\r\n          return getErrorsFromValidationError(error);\r\n      }\r\n  };\r\n};\r\n\r\nconst multipleCheckValues = ( target,initialValues, dataset)=> {\r\n  if(dataset === 'multipleCheck'){\r\n    const objectKeys = initialValues[dataset].includes(parseInt(target.value))\r\n    if(!objectKeys) {\r\n       initialValues[dataset].push( parseInt(target.value));\r\n       return { [target.name]: target.checked }\r\n    } else {\r\n      const index =  initialValues[dataset].findIndex(e => e === parseInt(target.value));\r\n      initialValues[dataset].splice(index, 1)\r\n      return { [target.name]: target.checked }\r\n    }\r\n  } \r\n}\r\n\r\nconst autoGeneratedFormValues = (target, initialValues, dataset) => {\r\n    const getDatasetName = dataset.split('-');\r\n    const objectKeys = initialValues[getDatasetName[0]].some((e) => {\r\n      const elementKey = Object.keys(e)\r\n      return elementKey.includes(dataset)\r\n    })\r\n    if(!objectKeys) {\r\n        initialValues[getDatasetName[0]].push({[dataset] : {[target.name] : target.value}})\r\n        return\r\n    } else {\r\n      const index = initialValues[getDatasetName[0]].findIndex((e) => {\r\n        const elementKey = Object.keys(e);\r\n        return elementKey.includes(dataset)\r\n      })\r\n      initialValues[getDatasetName[0]][index][dataset] ={ ...initialValues[getDatasetName[0]][index][dataset], ...{[target.name] : target.value}}\r\n      return\r\n    }\r\n}\r\n\r\n\r\nexport const getInputValue = (target, formik) => {\r\n  const initialValues = formik.initialValues;\r\n  const dataset = target.getAttribute('dataset');\r\n\r\n    if (target.type === 'checkbox') {\r\n      if(!!dataset){\r\n        multipleCheckValues(target, initialValues, dataset );\r\n      }\r\n      return { [target.name]: target.checked }\r\n    }\r\n    if (target.type === 'radio') {\r\n      return { [target.name]: parseInt(target.value)}\r\n    }\r\n    if (target.type === 'file') return { [target.name]: target.files[0] }\r\n    if(!!dataset){\r\n      autoGeneratedFormValues(target, initialValues, dataset)\r\n    }else {\r\n      return { [target.name]: target.value }\r\n    }\r\n}\r\n\r\n// CREATORS\r\nexport const handlerInputChangeCreator = (formik) => ({ target }) => {  formik.setValues({ ...formik.values, ...getInputValue(target, formik) })}\r\n;\r\n\r\n//PARSED FUNCTIONS (need parse the values of auto generated forms when its send to backend)\r\nexport const parsedAutoFormValues = (values) => {\r\n  const parsedValues = values.generatedForm.map((item,index) =>  {\r\n     return { \r\n       institution: item[`generatedForm-${index}`].institution,\r\n       educacion: item[`generatedForm-${index}`].educacion,\r\n       certificado: item[`generatedForm-${index}`].certificado,\r\n       area: item[`generatedForm-${index}`].area,\r\n       anoGraduacion: item[`generatedForm-${index}`].anoGraduacion\r\n     }\r\n   }, {})\r\n   return parsedValues\r\n }\r\n","import { useFormik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { InputComponent } from \"../../components/common/InputComponent\";\r\nimport { jopProfileShema as schema } from \"../../components/schemas/schema\";\r\nimport { validate, handlerInputChangeCreator } from \"../../utils/utils\";\r\nimport { ButtonComponent } from \"../../components/common/ButtonComponent\";\r\nimport { FormsCardContainer } from \"../../layout/FormsCardContainer\";\r\n\r\nconst inputConfig = [\r\n  {\r\n    type: \"text\",\r\n    id: \"name\",\r\n    placeholder: \"tu nombre\",\r\n    name: \"name\",\r\n    label: \"nombre\",\r\n    autoComplete: \"given-name\",\r\n  },\r\n  {\r\n    type: \"text\",\r\n    id: \"lastName\",\r\n    placeholder: \"tu apellido\",\r\n    name: \"lastName\",\r\n    label: \"Apellido\",\r\n    autoComplete: \"family-name\",\r\n  },\r\n  {\r\n    type: \"email\",\r\n    id: \"email\",\r\n    placeholder: \"email@gmail.com\",\r\n    name: \"email\",\r\n    label: \"email\",\r\n    autoComplete: \"email\",\r\n  },\r\n  {\r\n    type: \"tel\",\r\n    id: \"number\",\r\n    placeholder: \"numero telefono\",\r\n    name: \"number\",\r\n    label: \"numero telefono\",\r\n    autoComplete: \"number\",\r\n  },\r\n  {\r\n    type: \"text\",\r\n    id: \"business\",\r\n    placeholder: \"nombre empresa\",\r\n    name: \"business\",\r\n    label: \"¿a que empresa perteneces?\",\r\n    autoComplete: \"\",\r\n  },\r\n  {\r\n    titleHead: {\r\n      show: true,\r\n      title: \"Cargo/área de preferencia que buscas contratar:\",\r\n    },\r\n    type: \"checkbox\",\r\n    id: \"DevFrontEnd\",\r\n    name: \"DevFrontEnd\",\r\n    label: \"Desarrollador Front End\",\r\n  },\r\n  {\r\n    type: \"checkbox\",\r\n    id: \"DevFullStackBackend\",\r\n    name: \"DevFullStackBackend\",\r\n    label: \"Desarrollador Full Stack\",\r\n  },\r\n  {\r\n    type: \"checkbox\",\r\n    id: \"DesignerUXUI\",\r\n    name: \"DesignerUXUI\",\r\n    label: \"Diseñador UX/UI\",\r\n  },\r\n  {\r\n    type: \"checkbox\",\r\n    id: \"AnalystQA\",\r\n    name: \"AnalystQA\",\r\n    label: \"Analista QA\",\r\n  },\r\n  {\r\n    type: \"checkbox\",\r\n    id: \"DevMobile\",\r\n    name: \"DevMobile\",\r\n    label: \"Desarrollador Mobile\",\r\n  },\r\n  {\r\n    type: \"checkbox\",\r\n    id: \"Data\",\r\n    name: \"Data\",\r\n    label: \"Datos\",\r\n  },\r\n  {\r\n    type: \"checkbox\",\r\n    id: \"Other\",\r\n    name: \"Other\",\r\n    label: \"Otra\",\r\n  },\r\n  {\r\n    type: \"text\",\r\n    id: \"doubts\",\r\n    placeholder: \"dudas...\",\r\n    name: \"doubts\",\r\n    label: \"¿dudas? dejalas aca\",\r\n    autoComplete: \"\",\r\n  },\r\n];\r\n\r\nconst JobProfile = () => {\r\n  const [check, setCheck] = useState(false);\r\n\r\n  const onSubmit = (values) => {\r\n    if (\r\n      formik.values.DevFrontEnd === true ||\r\n      formik.values.DevFullStackBackend === true ||\r\n      formik.values.DesignerUXUI === true ||\r\n      formik.values.AnalystQA === true ||\r\n      formik.values.DevMobile === true ||\r\n      formik.values.Data === true ||\r\n      formik.values.Other === true\r\n    ) {\r\n      console.log(values);\r\n    } else {\r\n      setCheck(true);\r\n    }\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      number: \"\",\r\n      business: \"\",\r\n      DevFrontEnd: false,\r\n      DevFullStackBackend: false,\r\n      DesignerUXUI: false,\r\n      AnalystQA: false,\r\n      DevMobile: false,\r\n      Data: false,\r\n      Other: false,\r\n      accepted: false,\r\n      doubts: \"\",\r\n    },\r\n    onSubmit: onSubmit,\r\n    validate: validate(schema),\r\n  });\r\n  const handleTxtChange = handlerInputChangeCreator(formik);\r\n  useEffect(() => {\r\n    setCheck(false);\r\n  }, [\r\n    formik.values.DevFrontEnd,\r\n    formik.values.DevFullStackBackend,\r\n    formik.values.DesignerUXUI,\r\n    formik.values.AnalystQA,\r\n    formik.values.DevMobile,\r\n    formik.values.Data,\r\n    formik.values.Other,\r\n  ]);\r\n  return (\r\n    <>\r\n      <div className=\"bg-primary containerWithHeader-min-height flex flex-col\">\r\n        <section className=\" flex grow items-center animate__animated animate__fadeIn\">\r\n          <div className=\"container mb-16  mx-auto mt-4\">\r\n            <FormsCardContainer>\r\n              <h3 className=\"text-4xl px-4\">Buscas talento TI? </h3>\r\n              <p className=\"p-4\">En breve te contactaremos:</p>\r\n              <form className=\"p-1\" onSubmit={formik.handleSubmit}>\r\n                <div className=\"p-4\">\r\n                  {inputConfig.map((item, index) => (\r\n                    <InputComponent\r\n                      key={`input-${index}${item.name}`}\r\n                      label={item.label}\r\n                      type={item.type}\r\n                      titleHead={item.titleHead}\r\n                      id={item.id}\r\n                      placeholder={item.placeholder}\r\n                      name={item.name}\r\n                      formik={formik}\r\n                      onChange={handleTxtChange}\r\n                    />\r\n                  ))}\r\n                  {check === true ? (\r\n                    <span className=\"text-error\">\r\n                      Seleccionar al menos una casilla\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                <ButtonComponent\r\n                  style={\"primary\"}\r\n                  type={\"submit\"}\r\n                ></ButtonComponent>\r\n              </form>\r\n            </FormsCardContainer>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobProfile;\r\n"],"names":["ButtonComponent","type","style","label","onClick","className","undefined","SelectComponent","options","dataset","onChange","formik","name","id","value","map","option","text","InputComponent","checkValue","radioValue","placeholder","titleHead","show","title","inputRef","useRef","htmlFor","values","current","click","size","color","ref","touched","errors","multipleCheck","basicSchema","Yup","shape","max","required","lastName","email","register","password","matches","c_password","oneOf","jopSchema","number","city","country","gender","workavailability","visa","min","login","postulate","maxEducationLevel","actualEducationSituation","englishLevel","otherTec","postulate2","cvUrl","urlLinkedin","projectDescription","experienceUI","experienceDev","experienceData","registerSchema","jopProfileShema","loginSchema","postulateSchema","postulateSchema2","FormsCardContainer","children","validate","getValidationSchema","validationSchema","validateSync","abortEarly","error","inner","reduce","path","getInputValue","target","initialValues","getAttribute","includes","parseInt","index","findIndex","e","splice","checked","push","multipleCheckValues","files","getDatasetName","split","some","Object","keys","autoGeneratedFormValues","handlerInputChangeCreator","setValues","parsedAutoFormValues","generatedForm","item","institution","educacion","certificado","area","anoGraduacion","inputConfig","autoComplete","useState","check","setCheck","useFormik","business","DevFrontEnd","DevFullStackBackend","DesignerUXUI","AnalystQA","DevMobile","Data","Other","accepted","doubts","onSubmit","console","log","schema","handleTxtChange","useEffect","handleSubmit"],"sourceRoot":""}